{"version":3,"sources":["assets/logo.svg","serviceWorker.ts","store/utils.ts","features/articles/actions.ts","features/articles/reducer.ts","features/auth/actions.ts","features/auth/reducer.ts","features/profile/actions.ts","features/profile/reducer.ts","store/root-reducer.ts","features/app/epics.ts","features/auth/epics.ts","features/profile/epics.ts","store/root-epic.ts","services/logger-service.ts","services/local-storage-service.ts","services/articles-api-client.ts","services/auth-api-client.ts","services/toast-service.ts","services/profile-api-client.ts","services/error-handler.ts","services/index.ts","store/index.ts","router-paths.ts","features/profile/components/Profile.tsx","routes/Home.tsx","features/articles/components/ArticleForm.tsx","layouts/Main.tsx","components/BackLink.tsx","routes/AddArticle.tsx","routes/EditArticle.tsx","features/articles/components/ArticleView.tsx","routes/ViewArticle.tsx","features/auth/components/LoginForm.tsx","routes/Login.tsx","components/NavLink.tsx","layouts/Navbar.tsx","features/auth/components/RegisterForm.tsx","routes/Register.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","composeEnhancers","compose","loadArticlesAsync","createAsyncAction","createArticleAsync","updateArticleAsync","deleteArticleAsync","reducer","combineReducers","isLoadingArticles","createReducer","handleAction","request","state","action","success","failure","articles","payload","concat","Object","toConsumableArray","map","i","id","filter","loginAsync","logout","createAction","refreshTokenAsync","initialState","jwt_token","refresh_token","isLoadingAuth","actions","tokens","objectSpread","error","getProfileAsync","profile","email","isLoadingProfile","rootReducer","history","router","connectRouter","auth","persistArticlesInLocalStorage","action$","store","_ref","localStorage","pipe","isActionOf","tap","_","set","value","ignoreElements","loadDataOnAppStart","_ref2","api","first","loginEpic$","state$","toast","switchMap","from","login","catchError","err","response","data","message","of","persistTokensInLocalStorage$","localStorageState","get","refreshTokenEpic$","_ref3","refreshToken","console","dir","logoutEpic$","_ref4","getProfileEpic","mergeMap","defer","getProfile","res","source","status","errorHandler","handle401Error","combineEpics","apply","values","app","logger_service","log","version","process","APP_VERSION","PREFIX","key","serializedValue","JSON","stringify","setItem","Error","getItem","parse","TIMEOUT","loadArticles","Promise","resolve","reject","setTimeout","createArticle","article","updateArticle","deleteArticle","_x","_login","this","arguments","_callee","loginDto","regenerator_default","a","wrap","_context","prev","next","axios","post","sent","abrupt","stop","register","_x2","_register","_callee2","registerDto","_context2","_x3","_refreshToken","_callee3","jwtRefreshToken","_context3","configure","position","info","warn","options","headers","Authorization","url","ajax","takeUntil","take","what","mergeMapTo","merge","services","logger","epicMiddleware","createEpicMiddleware","dependencies","createBrowserHistory","middlewares","routerMiddleware","enhancer","applyMiddleware","createStore","run","rootEpic","pathsMap","home","addArticle","viewArticle","articleId","editArticle","getPath","route","pathCb","_len","length","params","Array","_key","mapDispatchToProps","redirectToLogin","push","connect","token","isLogged","useEffect","react_default","createElement","Home","components_Profile","dispatchProps","cuid","redirectToListing","withFormik","enableReinitialize","mapPropsToValues","title","content","handleSubmit","form","props","setSubmitting","isSubmitting","dirty","formik_esm","htmlFor","name","placeholder","component","type","required","autoFocus","disabled","Main","children","renderActionsMenu","className","src","logo","alt","react_router_dom","to","BackLink","React","memo","areEqual","AddArticle","src_layouts_Main","components_BackLink","ArticleForm","ownProps","find","ArticleView","components_ArticleView","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","flexGrow","marginTop","validationSchema","yup","shape","password","min","max","redirectToHome","LoginForm","classes","onSubmit","asyncToGenerator","mark","initialValues","_ref5","TextField","label","LinearProgress","Button","variant","color","Login","components_LoginForm","link","NavLink","Link","RouterLink","menuButton","marginRight","spacing","onLogout","AppBar","Toolbar","IconButton","edge","aria-label","Menu","Typography","onClick","Fragment","components_NavLink","confirmPassword","oneOf","resetForm","submitForm","Register","components_RegisterForm","App","es","esm","layouts_Navbar","Container","maxWidth","style","paddingTop","react_router","exact","path","render","routes_EditArticle","routes_ViewArticle","Component","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61f8ecd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { compose } from 'redux';\n\nexport const composeEnhancers =\n  (process.env.NODE_ENV === 'development' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n","import { Article } from 'MyModels';\nimport { createAsyncAction } from 'typesafe-actions';\n\nexport const loadArticlesAsync = createAsyncAction(\n  'LOAD_ARTICLES_REQUEST',\n  'LOAD_ARTICLES_SUCCESS',\n  'LOAD_ARTICLES_FAILURE'\n)<undefined, Article[], string>();\n\nexport const createArticleAsync = createAsyncAction(\n  'CREATE_ARTICLE_REQUEST',\n  'CREATE_ARTICLE_SUCCESS',\n  'CREATE_ARTICLE_FAILURE'\n)<Article, Article[], string>();\n\nexport const updateArticleAsync = createAsyncAction(\n  'UPDATE_ARTICLE_REQUEST',\n  'UPDATE_ARTICLE_SUCCESS',\n  'UPDATE_ARTICLE_FAILURE'\n)<Article, Article[], string>();\n\nexport const deleteArticleAsync = createAsyncAction(\n  'DELETE_ARTICLE_REQUEST',\n  'DELETE_ARTICLE_SUCCESS',\n  'DELETE_ARTICLE_FAILURE'\n)<Article, Article[], Article>();\n","import { Article } from 'MyModels';\nimport { combineReducers } from 'redux';\nimport { createReducer } from 'typesafe-actions';\n\nimport {\n  loadArticlesAsync,\n  createArticleAsync,\n  updateArticleAsync,\n  deleteArticleAsync,\n} from './actions';\n\nconst reducer = combineReducers({\n  isLoadingArticles: createReducer(false as boolean)\n    .handleAction([loadArticlesAsync.request], (state, action) => true)\n    .handleAction(\n      [loadArticlesAsync.success, loadArticlesAsync.failure],\n      (state, action) => false\n    ),\n  articles: createReducer([] as Article[])\n    .handleAction(\n      [\n        loadArticlesAsync.success,\n        createArticleAsync.success,\n        updateArticleAsync.success,\n        deleteArticleAsync.success,\n      ],\n      (state, action) => action.payload\n    )\n    .handleAction(createArticleAsync.request, (state, action) => [\n      ...state,\n      action.payload,\n    ])\n    .handleAction(updateArticleAsync.request, (state, action) =>\n      state.map(i => (i.id === action.payload.id ? action.payload : i))\n    )\n    .handleAction(deleteArticleAsync.request, (state, action) =>\n      state.filter(i => i.id !== action.payload.id)\n    )\n    .handleAction(deleteArticleAsync.failure, (state, action) =>\n      state.concat(action.payload)\n    ),\n});\n\nexport default reducer;\n","import { createAction, createAsyncAction} from 'typesafe-actions';\nimport { Tokens } from 'MyModels';\nimport { LoginDto } from './models';\n\nexport const loginAsync = createAsyncAction(\n  'LOGIN_REQUEST',\n  'LOGIN_SUCCESS',\n  'LOGIN_FAILURE'\n)<LoginDto, Tokens, string>();\n\nexport const logout = createAction('LOGOUT')();\n\nexport const refreshTokenAsync = createAsyncAction(\n  'REFRESH_TOKEN_REQUEST',\n  'REFRESH_TOKEN_SUCCESS',\n  'REFRESH_TOKEN_FAILURE'\n)<string, Tokens, string>();\n","import { combineReducers } from 'redux';\nimport {ActionType, createReducer} from 'typesafe-actions';\nimport { Tokens } from 'MyModels';\n\nimport * as actions from './actions';\n\nexport type AuthState = Readonly<{\n  isLoadingAuth: boolean;\n  tokens: Tokens\n}>\nexport type AuthAction = ActionType<typeof actions>;\n\nconst initialState: AuthState = {\n  isLoadingAuth: false,\n  tokens: {\n    jwt_token: '',\n    refresh_token: ''\n  }\n}\n\n// @ts-ignore\nconst reducer = combineReducers<AuthState, AuthAction>({\n  isLoadingAuth: createReducer(initialState.isLoadingAuth)\n    .handleAction([actions.loginAsync.request], (state, action) => true)\n    .handleAction(\n      [actions.loginAsync.success, actions.loginAsync.failure],\n      (state, action) => false\n    ),\n  tokens: createReducer(initialState.tokens)\n    .handleAction(\n      [actions.loginAsync.success, actions.refreshTokenAsync.success],\n      (state, action) => {\n        return {\n          ...state,\n          ...action.payload\n        }\n      }\n    )\n    .handleAction(\n      [actions.loginAsync.failure, actions.refreshTokenAsync.failure],\n      (state, action) => ({\n        ...state,\n        error: action.payload,\n      })\n    )\n    .handleAction(\n      actions.logout,\n      (state, action) => {\n        return {\n          ...state,\n          jwt_token: '',\n          refresh_token: ''\n        }\n      }\n    )\n\n});\n\nexport default reducer;\n","import { createAsyncAction } from 'typesafe-actions';\nimport { Profile } from \"MyModels\";\n\nexport const getProfileAsync = createAsyncAction(\n  'GET_PROFILE_REQUEST',\n  'GET_PROFILE_SUCCESS',\n  'GET_PROFILE_FAILURE'\n)<undefined, Profile, string>();\n","import { combineReducers } from 'redux';\nimport { ActionType, createReducer } from 'typesafe-actions';\nimport { getProfileAsync } from './actions';\nimport { Profile } from 'MyModels';\nimport * as actions from './actions';\n\nexport type ProfileState = Readonly<{\n  isLoadingProfile: boolean;\n  profile: {\n    profile: Profile;\n    error: string;\n  };\n}>;\nexport type ProfileAction = ActionType<typeof actions>;\n\nconst initialState: ProfileState = {\n  isLoadingProfile: false,\n  profile: { profile: { email: ''}, error: ''  },\n};\n\nconst reducer = combineReducers<ProfileState, ProfileAction>({\n  isLoadingProfile: createReducer(initialState.isLoadingProfile)\n    .handleAction([getProfileAsync.request], (state, action) => true)\n    .handleAction(\n      [getProfileAsync.success, getProfileAsync.failure],\n      (state, action) => false\n    ),\n  profile: createReducer(initialState.profile as Profile)\n    .handleAction([getProfileAsync.success], (state, action) => {\n      return {\n        ...state,\n        profile: action.payload\n      }\n    })\n    .handleAction(getProfileAsync.failure, (state, action) => ({\n      ...state,\n      error: action.payload,\n    })),\n});\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nimport articles from 'features/articles/reducer';\nimport auth from 'features/auth/reducer';\nimport profile from 'features/profile/reducer';\n\nconst rootReducer = (history: History<any>) =>\n  combineReducers({\n    router: connectRouter(history),\n    articles,\n    auth,\n    profile\n  });\n\nexport default rootReducer;\n","import { RootEpic } from 'MyTypes';\nimport { tap, ignoreElements, filter, first } from 'rxjs/operators';\n\nimport { isActionOf } from 'typesafe-actions';\nimport {\n  loadArticlesAsync,\n  createArticleAsync,\n  updateArticleAsync,\n  deleteArticleAsync,\n} from '../articles/actions';\n\nexport const persistArticlesInLocalStorage: RootEpic = (\n  action$,\n  store,\n  { localStorage }\n) =>\n  action$.pipe(\n    filter(\n      isActionOf([\n        loadArticlesAsync.success,\n        createArticleAsync.success,\n        updateArticleAsync.success,\n        deleteArticleAsync.success,\n      ])\n    ),\n    tap(_ => {\n      // handle side-effects\n      localStorage.set('articles', store.value.articles.articles);\n    }),\n    ignoreElements()\n  );\n\nexport const loadDataOnAppStart: RootEpic = (action$, store, { api }) =>\n  action$.pipe(\n    first(),\n    // map(loadArticlesAsync.request)\n  );\n","import {\n  catchError,\n  filter,\n  ignoreElements,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {isActionOf} from 'typesafe-actions';\nimport { from, of } from 'rxjs';\n\nimport {loginAsync, logout, refreshTokenAsync} from './actions';\nimport { RootEpic } from 'MyTypes';\n\nexport const loginEpic$: RootEpic = (action$, state$, { api, toast }) =>\n  action$.pipe(\n    filter(isActionOf(loginAsync.request)),\n    switchMap(action =>\n      from(api.auth.login(action.payload)).pipe(\n        map(loginAsync.success),\n        catchError(err => {\n          toast.error(err.response.data.message);\n          return of(loginAsync.failure(err.response.data));\n        })\n      )\n    )\n  );\n\nexport const persistTokensInLocalStorage$: RootEpic = (\n  action$,\n  state$,\n  { localStorage }\n) =>\n  action$.pipe(\n    filter(isActionOf([loginAsync.success, refreshTokenAsync.success])),\n    tap(_ => {\n      const localStorageState = localStorage.get('reduxState');\n      const state = {\n        ...localStorageState,\n        auth: {\n          ...state$.value.auth,\n        },\n      };\n      localStorage.set('reduxState', state);\n    }),\n    ignoreElements()\n  );\n\nexport const refreshTokenEpic$: RootEpic = (action$, state$, { api, toast }) =>\n  action$.pipe(\n    filter(isActionOf(refreshTokenAsync.request)),\n    switchMap(action =>\n      from(api.auth.refreshToken(action.payload)).pipe(\n        map(refreshTokenAsync.success),\n        catchError(err => {\n          console.dir(err);\n          toast.error(err.response.data.message);\n          return of(refreshTokenAsync.failure(err.response.data));\n        })\n      )\n    )\n  );\n\nexport const logoutEpic$: RootEpic = (action$, state$, { localStorage }) =>\n  action$.pipe(\n    filter(isActionOf([refreshTokenAsync.failure, logout])),\n    tap(action => {\n      const localStorageState = localStorage.get('reduxState')\n      const state = {\n        ...localStorageState,\n        auth: {\n          tokens: {\n            jwt_token: '',\n            refresh_token: ''\n          }\n        },\n      };\n      localStorage.set('reduxState', state);\n    }),\n    ignoreElements()\n  );\n","import {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n} from 'rxjs/operators';\nimport { isActionOf} from 'typesafe-actions';\nimport {defer, of} from 'rxjs';\n\nimport { getProfileAsync } from './actions';\nimport { RootEpic } from 'MyTypes';\n\n//\nexport const getProfileEpic: RootEpic = (action$, state$, { api, toast }) =>\n  action$.pipe(\n    filter(isActionOf(getProfileAsync.request)),\n    mergeMap(action =>\n      defer(() => {\n        return api.profile.getProfile(action$, state$);\n      }).pipe(\n        map(res => getProfileAsync.success(res.response)),\n        catchError((error, source) => {\n          if (error.status === 401) {\n            return api.errorHandler.handle401Error(action$, state$, source)\n          }\n\n          return of(getProfileAsync.failure(error));\n        })\n      )\n    )\n  );\n","import { combineEpics } from 'redux-observable';\n\nimport * as app from '../features/app/epics';\nimport * as auth from '../features/auth/epics';\nimport * as profile from 'features/profile/epics';\n\nexport default combineEpics(\n  ...Object.values(app),\n  ...Object.values(auth),\n  ...Object.values(profile)\n);\n","// TODO: connect external client logging service here (e.g. Sentry SDK)\n// tslint:disable-next-line:no-console\nexport default { log: console.log };\n","const version = process.env.APP_VERSION || 0;\nconst PREFIX = `MY_APP_v${version}::`;\n\nexport function set<T = object>(key: string, value: T): void {\n  if (!localStorage) {\n    return;\n  }\n\n  try {\n    const serializedValue = JSON.stringify(value);\n    localStorage.setItem(PREFIX + key, serializedValue);\n  } catch (error) {\n    throw new Error('store serialization failed');\n  }\n}\n\nexport function get<T = object>(key: string): T | undefined {\n  if (!localStorage) {\n    return;\n  }\n\n  try {\n    const serializedValue = localStorage.getItem(PREFIX + key);\n    if (serializedValue == null) {\n      return;\n    }\n    return JSON.parse(serializedValue);\n  } catch (error) {\n    throw new Error('store deserialization failed');\n  }\n}\n","import { Article } from 'MyModels';\n\nimport * as localStorage from './local-storage-service';\n\nlet articles: Article[] = localStorage.get<Article[]>('articles') || [];\n\nconst TIMEOUT = 750;\n\nexport function loadArticles(): Promise<Article[]> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(articles);\n    }, TIMEOUT);\n  });\n}\n\nexport function createArticle(article: Article): Promise<Article[]> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      articles = articles.concat(article);\n      resolve(articles);\n    }, TIMEOUT);\n  });\n}\n\nexport function updateArticle(article: Article): Promise<Article[]> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      articles = articles.map(i => (i.id === article.id ? article : i));\n      resolve(articles);\n    }, TIMEOUT);\n  });\n}\n\nexport function deleteArticle(article: Article): Promise<Article[]> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      articles = articles.filter(i => i.id !== article.id);\n      resolve(articles);\n    }, TIMEOUT);\n  });\n}\n","import axios from 'axios';\n\nimport { LoginDto, Tokens, RegisterDto } from \"MyModels\";\n\nexport async function login(loginDto: LoginDto): Promise<Tokens> {\n  const res = await axios.post<Tokens | Error>('/api/v1/auth/login', {...loginDto});\n  return res.data\n}\n\nexport async function register(registerDto: RegisterDto): Promise<any> {\n  const res = await axios.post('/api/v1/users/register', registerDto)\n  return res.data;\n}\n\nexport async function refreshToken(jwtRefreshToken: string): Promise<Tokens> {\n  const res = await axios.post('/api/v1/auth/login/token/refresh', {\n    refresh_token: jwtRefreshToken\n  })\n  console.log(res);\n  return res.data;\n}\n","import 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\ntoast.configure({ position: 'bottom-center' });\n\nconst { info, warn, error, success } = toast;\n\nexport { info, warn, error, success };\n","import { Profile } from 'MyModels';\nimport { Observable } from 'rxjs';\nimport { ActionsObservable, StateObservable } from 'redux-observable';\nimport { RootState, RootAction } from 'MyTypes';\nimport {ajax} from \"rxjs/ajax\";\n\nexport function getProfile(action$: ActionsObservable<RootAction>, state$: StateObservable<RootState>): Observable<Profile> {\n  const { jwt_token } = state$.value.auth.tokens;\n  const options = {\n    headers: {\n      Authorization: `Bearer ${jwt_token}`,\n    },\n    url: 'api/v1/users/profile',\n  };\n  return ajax(options);\n}\n","import {\n  filter,\n  merge, mergeMapTo,\n  take,\n  takeUntil, tap,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { refreshTokenAsync } from '../features/auth/actions';\nimport { ActionsObservable, StateObservable } from 'redux-observable';\nimport { RootState, RootAction } from 'MyTypes';\nimport { isActionOf } from 'typesafe-actions';\n\nexport function handle401Error(\n  action$: ActionsObservable<RootAction>,\n  state$: StateObservable<RootState>,\n  source: Observable<any>\n): Observable<any> {\n  const { refresh_token } = state$.value.auth.tokens;\n  return action$.pipe(\n    filter(isActionOf(refreshTokenAsync.success)),\n    takeUntil(action$.pipe(filter(isActionOf(refreshTokenAsync.failure)))),\n    take(1),\n    tap(what => console.log(what, source)),\n    mergeMapTo(source),\n    tap(res => console.log(res)),\n    merge(of(refreshTokenAsync.request(refresh_token))) // Try to refresh token\n  );\n}\n","import * as logger from './logger-service';\nimport * as articles from './articles-api-client';\nimport * as auth from './auth-api-client';\nimport * as toast from './toast-service';\nimport * as localStorage from './local-storage-service';\nimport * as profile from './profile-api-client';\nimport * as errorHandler from './error-handler';\n\nexport default {\n  logger,\n  localStorage,\n  toast,\n  api: {\n    articles,\n    auth,\n    profile,\n    errorHandler\n  },\n};\n","import { RootAction, RootState, Services } from 'MyTypes';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootEpic from './root-epic';\nimport services from '../services';\nimport * as localStorage from 'services/local-storage-service';\n\nexport const epicMiddleware = createEpicMiddleware<\n  RootAction,\n  RootAction,\n  RootState,\n  Services\n>({\n  dependencies: services,\n});\n\n// configure middlewares\nexport const history = createBrowserHistory();\nconst middlewares = [routerMiddleware(history), epicMiddleware];\n// compose enhancers\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nconst localStorageState = localStorage.get('reduxState');\n\n// rehydrate state on app start\nconst initialState = {\n  ...localStorageState\n};\n\n// create store\nconst store = createStore(rootReducer(history), initialState, enhancer);\n\nepicMiddleware.run(rootEpic);\n\n// export store singleton instance\nexport default store;\n","const pathsMap = {\n  home: () => '/',\n  login: () => '/login',\n  register: () => '/register',\n  addArticle: () => '/add-article',\n  viewArticle: (articleId: string) => `/articles/${articleId}`,\n  editArticle: (articleId: string) => `/articles/${articleId}/edit`,\n};\ntype PathsMap = typeof pathsMap;\n\nexport const getPath = <TRoute extends keyof PathsMap>(\n  route: TRoute,\n  ...params: Parameters<PathsMap[TRoute]>\n) => {\n  const pathCb: (...args: any[]) => string = pathsMap[route];\n\n  return pathCb(...params);\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport { getPath } from 'router-paths';\nimport { RootState } from 'MyTypes';\nimport { getProfileAsync } from '../actions';\n\n\nconst mapStateToProps = (state: RootState) => {\n  console.log(state);\n  return {\n    profile: state.profile.profile,\n    token: state.auth.tokens.jwt_token,\n    isLogged: state.auth.tokens.jwt_token.length > 0,\n  };\n};\n\nconst mapDispatchToProps = {\n  getProfile: getProfileAsync.request,\n  redirectToLogin: () => push(getPath('login'))\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\n\nconst Profile: React.FC<Props> = ({ profile, getProfile, isLogged, redirectToLogin, token }) => {\n  useEffect(() => {\n    if (isLogged) {\n      getProfile();\n    } else {\n      redirectToLogin()\n    }\n  }, [isLogged])\n\n  return (\n    <div>\n      Welcome, <strong>{profile.profile.email}</strong>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Profile);\n","import React from 'react';\n\nimport Profile from 'features/profile/components/Profile';\n\nexport default () => (\n  <Profile />\n);\n","import React from 'react';\nimport cuid from 'cuid';\nimport { Form, FormikProps, Field, withFormik, ErrorMessage } from 'formik';\nimport { Article } from 'MyModels';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport { createArticleAsync, updateArticleAsync } from '../actions';\n// import { getPath } from '../../../router-paths';\n\ntype FormValues = Pick<Article, 'title' | 'content'> & {};\n\nconst dispatchProps = {\n  createArticle: (values: FormValues) =>\n    createArticleAsync.request({\n      id: cuid(),\n      ...values,\n    }),\n  updateArticle: (values: Article) =>\n    updateArticleAsync.request({\n      ...values,\n    }),\n  redirectToListing: () => push('/'),\n};\n\ntype Props = typeof dispatchProps & {\n  article?: Article;\n};\n\nconst InnerForm: React.FC<Props & FormikProps<FormValues>> = props => {\n  const { isSubmitting, dirty } = props;\n  return (\n    <Form>\n      <div>\n        <label htmlFor=\"title\">Title</label>\n        <br />\n        <Field\n          name=\"title\"\n          placeholder=\"Title\"\n          component=\"input\"\n          type=\"text\"\n          required\n          autoFocus\n        />\n        <ErrorMessage name=\"title\" />\n      </div>\n\n      <div>\n        <label htmlFor=\"title\">Content</label>\n        <br />\n        <Field\n          name=\"content\"\n          placeholder=\"Article content\"\n          component=\"textarea\"\n          required\n          type=\"text\"\n        />\n        <ErrorMessage name=\"content\" />\n      </div>\n\n      <button type=\"submit\" disabled={!dirty || isSubmitting}>\n        Submit\n      </button>\n    </Form>\n  );\n};\n\nexport default compose(\n  connect(\n    null,\n    dispatchProps\n  ),\n  withFormik<Props, FormValues>({\n    enableReinitialize: true,\n    // initialize values\n    mapPropsToValues: ({ article: data }) => ({\n      title: (data && data.title) || '',\n      content: (data && data.content) || '',\n    }),\n    handleSubmit: (values, form) => {\n      if (form.props.article != null) {\n        form.props.updateArticle({ ...form.props.article, ...values });\n      } else {\n        form.props.createArticle(values);\n      }\n\n      form.props.redirectToListing();\n      form.setSubmitting(false);\n    },\n  })\n)(InnerForm);\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Main.css';\nimport logo from '../assets/logo.svg';\n\ntype Props = {\n  renderActionsMenu?: () => JSX.Element;\n};\n\nconst Main: FC<Props> = ({ children, renderActionsMenu }) => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Link className=\"App-link\" to=\"/\">\n            Demo App\n          </Link>\n        {renderActionsMenu && renderActionsMenu()}\n    </header>\n    <main className=\"App-main\">{children}</main>\n  </div>\n);\n\nexport default Main;\n","import React from 'react';\nimport areEqual from 'fast-deep-equal';\n\nimport { Link } from 'react-router-dom';\n\ninterface Props {}\n\nconst BackLink = React.memo<Props>(() => {\n  return (\n    <Link to=\"/\" className=\"link\">\n      {'< Back'}\n    </Link>\n  );\n}, areEqual);\n\nexport default BackLink;\n","import React from 'react';\n\nimport ArticleForm from '../features/articles/components/ArticleForm';\nimport Main from '../layouts/Main';\nimport BackLink from '../components/BackLink';\n\nexport default () => (\n  <Main renderActionsMenu={() => <BackLink />}>\n    <ArticleForm />\n  </Main>\n);\n","import { RootState } from 'MyTypes';\nimport React from 'react';\nimport { match } from 'react-router';\n\nimport ArticleForm from '../features/articles/components/ArticleForm';\nimport Main from '../layouts/Main';\nimport BackLink from '../components/BackLink';\nimport { connect } from 'react-redux';\n\ntype OwnProps = {\n  match: match<{ articleId: string }>;\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  article: state.articles.articles.find(\n    i => i.id === ownProps.match.params.articleId\n  ),\n});\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst EditArticle = ({ article }: Props) => {\n  return (\n    <Main renderActionsMenu={() => <BackLink />}>\n      <ArticleForm article={article} />\n    </Main>\n  );\n};\n\nexport default connect(mapStateToProps)(EditArticle);\n","import React from 'react';\n\nimport { Article } from 'MyModels';\n\ntype Props = {\n  article: Article;\n};\n\nconst ArticleView: React.FC<Props> = ({ article }) => {\n  return (\n    <div>\n      <h3>{article.title}</h3>\n\n      <p>{article.content}</p>\n    </div>\n  );\n};\n\nexport default ArticleView;\n","import { RootState } from 'MyTypes';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { match } from 'react-router';\n\nimport ArticleView from '../features/articles/components/ArticleView';\nimport Main from '../layouts/Main';\nimport BackLink from '../components/BackLink';\n\ntype OwnProps = {\n  match: match<{ articleId: string }>;\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  article: state.articles.articles.find(\n    i => i.id === ownProps.match.params.articleId\n  ),\n});\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst ViewArticle = ({ article }: Props) => {\n  if (!article) {\n    return <div>'Article doesn\\'t exist'</div>;\n  }\n\n  return (\n    <Main renderActionsMenu={() => <BackLink />}>\n      <ArticleView article={article} />\n    </Main>\n  );\n};\n\nexport default connect(mapStateToProps)(ViewArticle);\n","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport areEqual from 'fast-deep-equal';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport {\n  Button,\n  createStyles,\n  LinearProgress,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\nimport { FormikActions, FormikValues } from 'formik/dist/types';\nimport * as yup from 'yup';\nimport { push } from 'connected-react-router';\nimport { getPath } from 'router-paths';\nimport { loginAsync } from '../actions';\nimport {RootState} from 'MyTypes';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      marginTop: '150px',\n    },\n  })\n);\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .min(8)\n    .max(64)\n    .required(),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  isLogged: !!state.auth.tokens.jwt_token,\n});\n\nconst mapDispatchToProps = {\n  login: loginAsync.request,\n  redirectToHome: () => push(getPath('home'))\n};\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\n\nconst LoginForm = React.memo<Props>(({ login, redirectToHome, isLogged }) => {\n\n  useEffect(() => {\n    if (isLogged) {\n      redirectToHome()\n    }\n  }, [isLogged]);\n\n\n  const classes = useStyles();\n\n  const onSubmit = async (\n    { email, password }: FormikValues,\n    { setSubmitting }: FormikActions<FormikValues>\n  ) => {\n    await login({ email, password });\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div className={classes.root}>\n            <h2>Login</h2>\n\n            <Field\n              component={TextField}\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              type=\"password\"\n              label=\"Password\"\n              name=\"password\"\n            />\n            <br />\n          </div>\n\n          {isSubmitting && <LinearProgress />}\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}, areEqual);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);\n","import React from 'react';\nimport LoginForm from '../features/auth/components/LoginForm';\n\nconst Login = () => {\n  return (\n    <LoginForm />\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { createStyles, Link, makeStyles, Theme } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    link: {\n      color: 'inherit'\n    }\n  })\n);\n\ntype Props = {\n  to: string;\n}\n\nconst NavLink: React.FC<Props> = ({ to, children }) => {\n  const classes = useStyles();\n\n  console.log(children);\n  return (\n    <Link className={classes.link} component={RouterLink} to={to}>\n      {children}\n    </Link>\n  );\n};\n\nexport default NavLink;\n","import React from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  AppBar,\n  IconButton,\n  Theme,\n  Toolbar,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport NavLink from 'components/NavLink';\nimport { connect } from 'react-redux';\nimport { RootState } from 'MyTypes';\nimport {logout} from \"../features/auth/actions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    isLogged: !!state.auth.tokens.jwt_token,\n  };\n};\n\nconst mapDispatchToProps = {\n  logout: logout\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\n\nconst renderAuthLinks = (isLoggedIn: boolean, onLogout: typeof logout) =>\n  isLoggedIn ? (\n    <Button color=\"inherit\" onClick={onLogout}>\n      Logout\n    </Button>\n  ) : (\n    <>\n      <Button color=\"inherit\">\n        <NavLink to={'login'}>Login</NavLink>\n      </Button>\n      <Button color=\"inherit\">\n        <NavLink to={'register'}>Register</NavLink>\n      </Button>\n    </>\n  );\n\nconst Navbar: React.FC<Props> = ({ isLogged, logout }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Worder\n          </Typography>\n\n          {renderAuthLinks(isLogged, logout)}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport {\n  Button,\n  createStyles,\n  LinearProgress,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport * as yup from 'yup';\n\nimport * as auth from 'services/auth-api-client';\nimport { push } from \"connected-react-router\";\nimport { getPath } from '../../../router-paths';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      marginTop: '150px',\n    },\n  })\n);\n\nconst mapDispatchToProps = {\n  redirectToHome: () => push(getPath('home'))\n};\n\ntype Props = typeof mapDispatchToProps;\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .required(),\n  password: yup\n    .string()\n    .min(8)\n    .max(64)\n    .required(),\n  confirmPassword: yup\n    .string()\n    .required('Confirm your password')\n    .oneOf([yup.ref('password')], 'Password does not match'),\n});\n\nconst RegisterForm: React.FC<Props> = ({ redirectToHome }) => {\n  const classes = useStyles();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={async ({ email, password }, { setSubmitting, resetForm }) => {\n        await auth.register({ email, password });\n        setSubmitting(false);\n        resetForm();\n        redirectToHome();\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Form>\n          <div className={classes.root}>\n            <h2>Register</h2>\n\n            <Field\n              component={TextField}\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              type=\"password\"\n              label=\"Password\"\n              name=\"password\"\n            />\n            <br />\n\n            <Field\n              component={TextField}\n              type=\"password\"\n              label=\"Password Confirmation\"\n              name=\"confirmPassword\"\n            />\n          </div>\n\n          {isSubmitting && <LinearProgress />}\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            onClick={submitForm}\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterForm);\n","import React from 'react';\nimport RegisterForm from 'features/auth/components/RegisterForm';\n\nconst Register = () => {\n\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Switch, Route } from 'react-router';\n\nimport store, { history } from './store';\nimport Home from './routes/Home';\nimport { getPath } from './router-paths';\nimport AddArticle from './routes/AddArticle';\nimport EditArticle from './routes/EditArticle';\nimport ViewArticle from './routes/ViewArticle';\nimport Login from './routes/Login';\nimport Navbar from './layouts/Navbar';\nimport Register from './routes/Register';\nimport { Container } from '@material-ui/core';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Navbar />\n          <Container maxWidth='md' style={{paddingTop: '2rem'}}>\n            <Switch>\n              <Route exact path={getPath('home')} render={Home} />\n              <Route exact path={getPath('login')} render={Login} />\n              <Route exact path={getPath('register')} render={Register} />\n              <Route exact path={getPath('addArticle')} render={AddArticle} />\n              <Route\n                exact\n                path={getPath('editArticle', ':articleId')}\n                render={props => <EditArticle {...props} />}\n              />\n              <Route\n                exact\n                path={getPath('viewArticle', ':articleId')}\n                render={props => <ViewArticle {...props} />}\n              />\n              <Route render={() => <div>Page not found!</div>} />\n            </Switch>\n          </Container>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import '@babel/polyfill';\nimport 'tslib';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}